# Choregraphe bezier export in Python.
names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([0, 1.56, 2.56, 5.24])
keys.append([[-0.163712, [3, -0.0133333, 0], [3, 0.52, 0]], [-0.160616, [3, -0.52, -1.29829e-07], [3, 0.333333, 8.32238e-08]], [-0.160616, [3, -0.333333, 0], [3, 0.893333, 0]], [-0.163712, [3, -0.893333, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([0, 1.56, 2.56, 5.24])
keys.append([[0, [3, -0.0133333, 0], [3, 0.52, 0]], [0, [3, -0.52, 0], [3, 0.333333, 0]], [0, [3, -0.333333, 0], [3, 0.893333, 0]], [0, [3, -0.893333, 0], [3, 0, 0]]])

names.append("LAnklePitch")
times.append([0, 1.56, 2.56, 5.24])
keys.append([[0.0874194, [3, -0.0133333, 0], [3, 0.52, 0]], [0.0872343, [3, -0.52, 0], [3, 0.333333, 0]], [0.0872343, [3, -0.333333, -2.49671e-08], [3, 0.893333, 6.69119e-08]], [0.0874194, [3, -0.893333, 0], [3, 0, 0]]])

names.append("LAnkleRoll")
times.append([0, 1.56, 2.56, 5.24])
keys.append([[-0.102616, [3, -0.0133333, 0], [3, 0.52, 0]], [-0.106419, [3, -0.52, 0], [3, 0.333333, 0]], [-0.106419, [3, -0.333333, 0], [3, 0.893333, 0]], [-0.102616, [3, -0.893333, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([0, 1.56, 2.56, 3.76, 5.24])
keys.append([[-0.419514, [3, -0.0133333, 0], [3, 0.52, 0]], [-0.409501, [3, -0.52, -5.19316e-08], [3, 0.333333, 3.32895e-08]], [-0.409501, [3, -0.333333, -3.32895e-08], [3, 0.4, 3.99474e-08]], [0.0052662, [3, -0.4, 0], [3, 0.493333, 0]], [-0.420919, [3, -0.493333, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([0, 1.56, 2.56, 3.76, 5.24])
keys.append([[-1.19292, [3, -0.0133333, 0], [3, 0.52, 0]], [-1.1973, [3, -0.52, 0], [3, 0.333333, 0]], [-1.1973, [3, -0.333333, 0], [3, 0.4, 0]], [-1.24791, [3, -0.4, 0], [3, 0.493333, 0]], [-1.19186, [3, -0.493333, 0], [3, 0, 0]]])

names.append("LHand")
times.append([0, 1.56, 2.56, 5.24])
keys.append([[0.293013, [3, -0.0133333, 0], [3, 0.52, 0]], [0.297288, [3, -0.52, 0], [3, 0.333333, 0]], [0.297288, [3, -0.333333, 2.68221e-07], [3, 0.893333, -7.18832e-07]], [0.293013, [3, -0.893333, 0], [3, 0, 0]]])

names.append("LHipPitch")
times.append([0, 1.56, 2.56, 3.76, 4.76, 5.24])
keys.append([[0.11994, [3, -0.0133333, 0], [3, 0.52, 0]], [0.0517476, [3, -0.52, 0], [3, 0.333333, 0]], [0.0517476, [3, -0.333333, 0], [3, 0.4, 0]], [0.000533026, [3, -0.4, 0], [3, 0.333333, 0]], [0.0436332, [3, -0.333333, -0.0268934], [3, 0.16, 0.0129088]], [0.11994, [3, -0.16, 0], [3, 0, 0]]])

names.append("LHipRoll")
times.append([0, 1.56, 2.56, 5.24])
keys.append([[0.115755, [3, -0.0133333, 0], [3, 0.52, 0]], [0.119335, [3, -0.52, -6.49145e-08], [3, 0.333333, 4.16119e-08]], [0.119335, [3, -0.333333, 0], [3, 0.893333, 0]], [0.115755, [3, -0.893333, 0], [3, 0, 0]]])

names.append("LHipYawPitch")
times.append([0, 1.56, 2.56, 5.24])
keys.append([[-0.170733, [3, -0.0133333, 0], [3, 0.52, 0]], [-0.171873, [3, -0.52, 0], [3, 0.333333, 0]], [-0.171873, [3, -0.333333, -1.66448e-08], [3, 0.893333, 4.46079e-08]], [-0.170733, [3, -0.893333, 0], [3, 0, 0]]])

names.append("LKneePitch")
times.append([0, 1.56, 2.56, 5.24])
keys.append([[-0.0844386, [3, -0.0133333, 0], [3, 0.52, 0]], [-0.089461, [3, -0.52, 6.49146e-08], [3, 0.333333, -4.16119e-08]], [-0.089461, [3, -0.333333, 0], [3, 0.893333, 0]], [-0.0844386, [3, -0.893333, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([0, 1.56, 2.56, 3.76, 5.24, 5.56])
keys.append([[1.32885, [3, -0.0133333, 0], [3, 0.52, 0]], [-0.908258, [3, -0.52, 0.510799], [3, 0.333333, -0.327435]], [-1.23569, [3, -0.333333, 0], [3, 0.4, 0]], [-0.479771, [3, -0.4, -0.395337], [3, 0.493333, 0.487582]], [1.41306, [3, -0.493333, 0], [3, 0.106667, 0]], [0.922765, [3, -0.106667, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([0, 1.56, 2.56, 3.76, 5.24, 5.56])
keys.append([[0.217416, [3, -0.0133333, 0], [3, 0.52, 0]], [0.19156, [3, -0.52, 0], [3, 0.333333, 0]], [0.487794, [3, -0.333333, -0.123031], [3, 0.4, 0.147637]], [1.00356, [3, -0.4, 0], [3, 0.493333, 0]], [0.248564, [3, -0.493333, 0], [3, 0.106667, 0]], [0.632552, [3, -0.106667, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([0, 1.56, 2.56, 3.76, 5.24])
keys.append([[0.93026, [3, -0.0133333, 0], [3, 0.52, 0]], [0.108128, [3, -0.52, 9.08804e-08], [3, 0.333333, -5.82566e-08]], [0.108128, [3, -0.333333, 5.82566e-08], [3, 0.4, -6.9908e-08]], [-0.0122173, [3, -0.4, 0], [3, 0.493333, 0]], [0.105375, [3, -0.493333, 0], [3, 0, 0]]])

names.append("RAnklePitch")
times.append([0, 1.56, 2.56, 5.24])
keys.append([[0.0874193, [3, -0.0133333, 0], [3, 0.52, 0]], [0.0872343, [3, -0.52, 1.29829e-07], [3, 0.333333, -8.32238e-08]], [0.0872342, [3, -0.333333, 0], [3, 0.893333, 0]], [0.0874193, [3, -0.893333, 0], [3, 0, 0]]])

names.append("RAnkleRoll")
times.append([0, 1.56, 2.56, 5.24])
keys.append([[0.102612, [3, -0.0133333, 0], [3, 0.52, 0]], [0.106415, [3, -0.52, -6.49146e-08], [3, 0.333333, 4.16119e-08]], [0.106415, [3, -0.333333, 0], [3, 0.893333, 0]], [0.102612, [3, -0.893333, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([0, 1.56, 2.56, 3.76, 5.24])
keys.append([[0.419514, [3, -0.0133333, 0], [3, 0.52, 0]], [0.402601, [3, -0.52, 8.30906e-07], [3, 0.333333, -5.32632e-07]], [0.4026, [3, -0.333333, 5.32632e-07], [3, 0.4, -6.39159e-07]], [-0.0052662, [3, -0.4, 0], [3, 0.493333, 0]], [0.420917, [3, -0.493333, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([0, 1.56, 2.56, 3.76, 5.24])
keys.append([[1.19292, [3, -0.0133333, 0], [3, 0.52, 0]], [1.1973, [3, -0.52, 0], [3, 0.333333, 0]], [1.1973, [3, -0.333333, 0], [3, 0.4, 0]], [1.24791, [3, -0.4, 0], [3, 0.493333, 0]], [1.19185, [3, -0.493333, 0], [3, 0, 0]]])

names.append("RHand")
times.append([0, 1.56, 2.56, 5.24])
keys.append([[0.293013, [3, -0.0133333, 0], [3, 0.52, 0]], [0.297288, [3, -0.52, 0], [3, 0.333333, 0]], [0.297288, [3, -0.333333, 2.68221e-07], [3, 0.893333, -7.18832e-07]], [0.293013, [3, -0.893333, 0], [3, 0, 0]]])

names.append("RHipPitch")
times.append([0, 1.56, 2.56, 3.76, 4.76, 5.24])
keys.append([[0.11994, [3, -0.0133333, 0], [3, 0.52, 0]], [0.0517476, [3, -0.52, 0], [3, 0.333333, 0]], [0.0517476, [3, -0.333333, 0], [3, 0.4, 0]], [0.000533026, [3, -0.4, 0], [3, 0.333333, 0]], [0.0436332, [3, -0.333333, -0.0268935], [3, 0.16, 0.0129089]], [0.11994, [3, -0.16, 0], [3, 0, 0]]])

names.append("RHipRoll")
times.append([0, 1.56, 2.56, 5.24])
keys.append([[-0.115749, [3, -0.0133333, 0], [3, 0.52, 0]], [-0.119335, [3, -0.52, 6.49146e-08], [3, 0.333333, -4.16119e-08]], [-0.119335, [3, -0.333333, 0], [3, 0.893333, 0]], [-0.115749, [3, -0.893333, 0], [3, 0, 0]]])

names.append("RHipYawPitch")
times.append([0, 1.56, 2.56, 5.24])
keys.append([[-0.170733, [3, -0.0133333, 0], [3, 0.52, 0]], [-0.171873, [3, -0.52, 0], [3, 0.333333, 0]], [-0.171873, [3, -0.333333, -1.66448e-08], [3, 0.893333, 4.46079e-08]], [-0.170733, [3, -0.893333, 0], [3, 0, 0]]])

names.append("RKneePitch")
times.append([0, 1.56, 2.56, 5.24])
keys.append([[-0.0844386, [3, -0.0133333, 0], [3, 0.52, 0]], [-0.089461, [3, -0.52, 6.49146e-08], [3, 0.333333, -4.16119e-08]], [-0.089461, [3, -0.333333, 0], [3, 0.893333, 0]], [-0.0844386, [3, -0.893333, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([0, 1.56, 2.56, 3.76, 5.24, 5.56])
keys.append([[1.32885, [3, -0.0133333, 0], [3, 0.52, 0]], [-0.908258, [3, -0.52, 0.510799], [3, 0.333333, -0.327435]], [-1.23569, [3, -0.333333, 0], [3, 0.4, 0]], [-0.479771, [3, -0.4, -0.395337], [3, 0.493333, 0.487583]], [1.41307, [3, -0.493333, 0], [3, 0.106667, 0]], [0.922765, [3, -0.106667, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([0, 1.56, 2.56, 3.76, 5.24, 5.56])
keys.append([[-0.217416, [3, -0.0133333, 0], [3, 0.52, 0]], [-0.19156, [3, -0.52, 0], [3, 0.333333, 0]], [-0.487794, [3, -0.333333, 0.123031], [3, 0.4, -0.147637]], [-1.00356, [3, -0.4, 0], [3, 0.493333, 0]], [-0.248567, [3, -0.493333, 0], [3, 0.106667, 0]], [-0.632552, [3, -0.106667, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([0, 1.56, 2.56, 3.76, 5.24])
keys.append([[-0.93026, [3, -0.0133333, 0], [3, 0.52, 0]], [0.0959141, [3, -0.52, 0], [3, 0.333333, 0]], [0.095914, [3, -0.333333, 7.49014e-08], [3, 0.4, -8.98817e-08]], [0.0122173, [3, -0.4, 0], [3, 0.493333, 0]], [0.0882574, [3, -0.493333, 0], [3, 0, 0]]])
